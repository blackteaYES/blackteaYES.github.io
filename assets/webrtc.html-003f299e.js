import{_ as e,V as o,W as c,X as n,Y as s,$ as t,Z as l,a0 as p,C as i}from"./framework-a71e09ed.js";const u="/assets/img/webrtc/WebRTC架构图.png",r="/assets/img/webrtc/WebRTC媒体协商.png",k="/assets/img/webrtc/理想网络情况.png",d="/assets/img/webrtc/实际网络情况.png",m="/assets/img/webrtc/NAT网关转换.png",v="/assets/img/webrtc/STUN.png",g="/assets/img/webrtc/TURN.png",b="/assets/img/webrtc/SignalServer.png",h="/assets/img/webrtc/交换SDP的过程.png",f="/assets/img/webrtc/configure执行报错1.png",y="/assets/img/webrtc/configure执行报错2.png",w="/assets/img/webrtc/configure正常运行.png",_="/assets/img/webrtc/make.png",q="/assets/img/webrtc/测试stun.png",x="/assets/img/webrtc/测试turn.png",T="/assets/img/webrtc/一对一通话场景.png",S="/assets/img/webrtc/WebRTC整合SpringBoot执行流程.png",C="/assets/img/webrtc/浏览器视频效果图.png",U="/assets/img/webrtc/电脑浏览器效果图.png",P="/assets/img/webrtc/手机效果图.png",I={},R=p('<h1 id="webrtc的学习" tabindex="-1"><a class="header-anchor" href="#webrtc的学习" aria-hidden="true">#</a> WebRTC的学习</h1><h2 id="_1-相关地址" tabindex="-1"><a class="header-anchor" href="#_1-相关地址" aria-hidden="true">#</a> 1. 相关地址</h2><h3 id="_1-1-文档教学" tabindex="-1"><a class="header-anchor" href="#_1-1-文档教学" aria-hidden="true">#</a> 1.1 文档教学</h3>',3),N={href:"http://webrtc.p2hp.com/#google_vignette",target:"_blank",rel:"noopener noreferrer"},W={href:"https://webrtc.org.cn/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://webrtc.org/",target:"_blank",rel:"noopener noreferrer"},A={href:"http://webrtc-security.github.io/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/coturn/coturn",target:"_blank",rel:"noopener noreferrer"},M={href:"https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/",target:"_blank",rel:"noopener noreferrer"},B=n("br",null,null,-1),O=n("hr",null,null,-1),V=n("h4",{id:"nat知相关知识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nat知相关知识","aria-hidden":"true"},"#"),s(" NAT知相关知识")],-1),D={href:"https://zhuanlan.zhihu.com/p/488135992",target:"_blank",rel:"noopener noreferrer"},z=n("br",null,null,-1),F={href:"https://www.cnblogs.com/mlgjb/p/8243646.htm",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.jianshu.com/p/9bfbcbee0abb",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.jianshu.com/p/258e7d8be2ba",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.jianshu.com/p/f71707892eb2",target:"_blank",rel:"noopener noreferrer"},G=n("hr",null,null,-1),X=n("h4",{id:"webrtc-代码相关博客",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webrtc-代码相关博客","aria-hidden":"true"},"#"),s(" WebRTC 代码相关博客")],-1),Y={href:"https://www.bbsmax.com/A/B0zqLrWNdv/",target:"_blank",rel:"noopener noreferrer"},K={href:"https://www.an.rustfisher.com/webrtc/web-samples/getUserMedia-open-camera/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/shushushv/webrtc-p2p",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://www.jianshu.com/p/476f39de86ed",target:"_blank",rel:"noopener noreferrer"},$=n("strong",null,"WebRTC",-1),nn={href:"https://zhuanlan.zhihu.com/p/490239698",target:"_blank",rel:"noopener noreferrer"},sn=n("strong",null,"WebRTC",-1),an=n("p",null,"  后续补充...",-1),tn=n("p",null,"  注意：",-1),pn=n("ul",null,[n("li",null,"如果只是初期入门只需要看第一个中文官网就行了，如果追求最新的文档去英文官网。"),n("li",null,"我这里的案例实现代码时使用了大佬的代码（代码相关博客里的第一个博客）。"),n("li",null,"代码实现时强力推荐去看其他相关博客，写的很不错。")],-1),en=n("hr",null,null,-1),on=n("h3",{id:"_1-2-视频教学",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-2-视频教学","aria-hidden":"true"},"#"),s(" 1.2 视频教学")],-1),cn={href:"https://www.bilibili.com/video/BV1D14y1W7qp?p=1&vd_source=d6cd8b3f892acbf22f02da2bfa7d95fe",target:"_blank",rel:"noopener noreferrer"},ln=n("p",null,"  我本人也是看该视频进行入门的，非常感谢该UP和讲师，讲的挺好的，缺点是视频不够清晰。",-1),un=n("hr",null,null,-1),rn=n("h2",{id:"_2-简述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-简述","aria-hidden":"true"},"#"),s(" 2. 简述")],-1),kn=n("h3",{id:"_2-1-什么是webrtc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-1-什么是webrtc","aria-hidden":"true"},"#"),s(" 2.1 什么是WebRTC?")],-1),dn={href:"https://baike.baidu.com/item/%E5%AE%9E%E6%97%B6%E9%80%9A%E8%AE%AF/2895640?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://baike.baidu.com/item/%E7%82%B9%E5%AF%B9%E7%82%B9/7452984?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://baike.baidu.com/item/%E8%A7%86%E9%A2%91%E6%B5%81/9392168?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://baike.baidu.com/item/%E9%9F%B3%E9%A2%91%E6%B5%81/7390786?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://baike.baidu.com/item/%E7%94%B5%E8%AF%9D%E4%BC%9A%E8%AE%AE/2519220?fromModule=lemma_inlink",target:"_blank",rel:"noopener noreferrer"},hn=n("p",null,"  简单来说，就是可以实现例如微信电话（实时通讯）的技术，并且它不需要任何第三方插件的和软件的限制，在浏览器里就可以实现视频通话。",-1),fn=n("hr",null,null,-1),yn=n("h3",{id:"_2-2-webrtc可以做什么",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-2-webrtc可以做什么","aria-hidden":"true"},"#"),s(" 2.2 WebRtc可以做什么?")],-1),wn=n("p",null,"  WebRTC 有许多不同的用例，从使用摄像头或麦克风的基本 Web 应用程序到更高级的视频通话应用程序和屏幕共享。我们收集了许多代码示例，以更好地说明该技术的工作原理以及您可以使用它的用途.",-1),_n=n("p",null,"  WebRTC提供了视频会议的核心技术，包括音视频的采集、编解码、网络传输、展示等功能，并且还支持跨平台，包括linux、windows、mac、android等。",-1),qn={href:"https://webrtc.p2hp.com/samples/",target:"_blank",rel:"noopener noreferrer"},xn=n("p",null,"  我建议先把通信原理看了之后再去写例子。",-1),Tn=n("hr",null,null,-1),Sn=n("h3",{id:"_2-3-webrtc的架构",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-3-webrtc的架构","aria-hidden":"true"},"#"),s(" 2.3 WebRTC的架构")],-1),Cn=p('<h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> <img src="'+u+'" alt="WebRTC架构图" loading="lazy"></h2><h4 id="_2-3-1-webrtc架构组件介绍" tabindex="-1"><a class="header-anchor" href="#_2-3-1-webrtc架构组件介绍" aria-hidden="true">#</a> 2.3.1 WebRTC架构组件介绍</h4><p><strong>Your Web App</strong></p><p>  Web开发者开发的程序，Web开发者可以基于集成WebRTC的浏览器提供的web API开发基于视频、音频的实时通信 应用。</p><p><strong>Web API</strong></p><p>  面向第三方开发者的WebRTC标准API（Javascript），使开发者能够容易地开发出类似于网络视频聊天的web应用， 最新的标准化进程可以查看这里。</p><p><strong>WebRTC Native C++ API</strong></p><p>  本地C++ API层，使浏览器厂商容易实现WebRTC标准的Web API，抽象地对数字信号过程进行处理。</p><p><strong>Transport / Session</strong></p><p>  传输/会话层</p><p>  会话层组件采用了libjingle库的部分组件实现，无须使用xmpp/jingle协议 。</p><p><strong>VoiceEngine</strong></p><p>  音频引擎是包含一系列音频多媒体处理的框架。</p><p>  PS：VoiceEngine是WebRTC极具价值的技术之一，是Google收购GIPS公司后开源的。在VoIP上，技术业界领先。</p><p>  Opus：支持从6 kbit/s到510 kbit/s的恒定和可变比特率编码，帧大小从2.5 ms到60 ms，各种采样率从8 kHz（4 kHz 带宽）到48 kHz（20 kHz带宽，可复制人类听觉系统的整个听力范围）。由IETF RFC 6176定义。</p><p>  <em>NetEQ</em> 模块是Webrtc语音引擎中的核心模块 ，一种动态抖动缓冲和错误隐藏算法，用于隐藏网络抖动和数据包丢失 的负面影响。保持尽可能低的延迟，同时保持最高的语音质量。</p><p><strong>VideoEngine</strong></p><p>  WebRTC视频处理引擎</p><p>  VideoEngine是包含一系列视频处理的整体框架，从摄像头采集视频到视频信息网络传输再到视频显示整个完整过程 的解决方案。</p><p>  <strong>VP8</strong> 视频图像编解码器，是WebRTC视频引擎的默认的编解码器 。</p><p>  <strong>VP8</strong>适合实时通信应用场景，因为它主要是针对低延时而设计的编解码器。</p><hr><h3 id="_2-4-webrtc的原理" tabindex="-1"><a class="header-anchor" href="#_2-4-webrtc的原理" aria-hidden="true">#</a> 2.4 WebRTC的原理</h3><p>  首先思考的问题：两个不同网络环境的（具备摄像头/麦克风多媒体设备的）浏览器，要实现点对点 的实时音视频对 话，难点在哪里？</p><ol><li>了解对方的媒体格式、支持的最大分辨率和其他媒体信息？</li><li>要了解彼此的网络，就有可能找到一条通信链路？</li><li>两个终端还没有建立连接时,如何交换“媒体信息”和“网络信息”呢?</li></ol><hr><h4 id="_2-4-1-媒体协商-sdp" tabindex="-1"><a class="header-anchor" href="#_2-4-1-媒体协商-sdp" aria-hidden="true">#</a> 2.4.1 媒体协商（sdp）</h4><figure><img src="'+r+'" alt="WebRTC媒体协商" tabindex="0" loading="lazy"><figcaption>WebRTC媒体协商</figcaption></figure><p>  彼此要了解对方支持的媒体格式？</p><p>  为了保证两端都有正确的编码和解码，最简单的方法就是取它们的交集H264</p><p>  注意:有一种特殊的协议叫做 <em><strong>Session Description protocol (SDP)</strong></em> ，可以用来描述上述信息。</p><p>  <strong>媒体协商</strong>：在webrtc中，参与视频通信的<strong>双方必须首先交换SDP信息</strong>，这样双方才能知根知底，而交换SDP的过程，也称为&quot;<strong>媒体协商</strong>&quot;。</p><hr><h4 id="_2-4-2-网络协商-candidate" tabindex="-1"><a class="header-anchor" href="#_2-4-2-网络协商-candidate" aria-hidden="true">#</a> 2.4.2 网络协商（candidate）</h4><p>  同样，在复杂的网络环境中，要在两端之间建立连接，必须有一个双方都可以访问的链路。</p><p>  <strong>理想的网络情况</strong>是每个浏览器的电脑都是私有公网IP，可以直接进行点对点连接。</p><p><img src="'+k+'" alt="理想网络情况" loading="lazy">  </p><p>  <strong>实际情况</strong>是我们的电脑和电脑之前或大或小都是在某个局域网中，需要NAT（Network Address Translation，网络地址转换）。</p><figure><img src="'+d+'" alt="实际网络情况" tabindex="0" loading="lazy"><figcaption>实际网络情况</figcaption></figure><p>  注意：如果是在同一个局域网中，那么直接使用相同的内网网段就可以了，但是一般情况下都是不同的。</p><p>  在中国的网络环境下，据统计，至少有一半的网络不能直接连接。我个人认为根本原因是:在互联网发展的早期，绝大多数IP4地址资源都被国外所占据。当轮到中国等发展中国家使用IP地址时，大多数计算机没有公网IP地址，只能通过路由器和交换机进行NAT转换，相当一部分NAT是对称的。基本上，没有办法播放它。</p><p>  那么我们就需要使用NAT进行转换。 <img src="'+m+'" alt="NAT网关转换" loading="lazy">  </p><p>  所以在解决 <em><strong>WebRTC</strong></em> 使用过程中的上述问题的时候，我们需要用到 <em><strong>STUN</strong></em> 和 <em><strong>TURN</strong></em> 。</p><hr><h5 id="_2-4-2-1-stun" tabindex="-1"><a class="header-anchor" href="#_2-4-2-1-stun" aria-hidden="true">#</a> 2.4.2.1 STUN</h5>',45),Un=n("em",null,[n("strong",null,"STUN")],-1),Pn={href:"https://blog.csdn.net/qq_33743182/article/details/122978451",target:"_blank",rel:"noopener noreferrer"},In=n("p",null,"  在遇到上述情况的时候，我们可以建立一个STUN服务器，这个服务器做什么用的呢？主要是给无法在公网环境下的 视频通话设备分配公网IP用的。这样两台电脑就可以在公网IP中进行通话。",-1),Rn=n("figure",null,[n("img",{src:v,alt:"STUN",tabindex:"0",loading:"lazy"}),n("figcaption",null,"STUN")],-1),Nn=n("p",null,[s("  使用一句话说明 "),n("em",null,[n("strong",null,"STUN")]),s(" 做的事情就是：告诉我你的 "),n("strong",null,"公网IP地址+端口"),s(" 是什么?")],-1),Wn={href:"https://zhuanlan.zhihu.com/p/488135992",target:"_blank",rel:"noopener noreferrer"},En=p('<p>  那么问题来了， <em><strong>STUN</strong></em> 并不是每次都能成功的为需要 <em><strong>NAT</strong></em> 的通话设备分配 <em><strong>IP</strong></em> 地址的，<em><strong>P2P</strong></em> 在传输媒体流时，使用的本地带宽，在多人视频通话的过程中，通话质量的好坏往往需要根据使用者本地的带宽确定。</p><p>  那么怎么办？ <em><strong>TURN</strong></em> 可以 很好的解决这个问题。</p><hr><h5 id="_2-4-2-2-turn" tabindex="-1"><a class="header-anchor" href="#_2-4-2-2-turn" aria-hidden="true">#</a> 2.4.2.2 TURN</h5><p>  <em><strong>TURN</strong></em> 的全称为 <em><strong>Traversal Using Relays around NAT</strong></em> ，是 <em><strong>STUN/RFC5389</strong></em> 的一个拓展，主要添加了 <em><strong>Relay</strong></em> 功能。如果终端在 <em><strong>NAT</strong></em> 之后， 那么在特定的情景下，有可能使得终端无法和其对等端（<em><strong>peer</strong></em>）进行直接的通信，这时就需要公网 的服务器作为一个 <strong>中继</strong> ， 对来往的数据进行转发。</p><p>  这个转发的协议就被定义为TURN。</p><figure><img src="'+g+'" alt="TURN" tabindex="0" loading="lazy"><figcaption>TURN</figcaption></figure><p>  在 <em><strong>STUN</strong></em> 分配公网IP <strong>失败</strong> 后，可以通过 <em><strong>TURN服务器</strong></em> 请求公网IP地址作为<strong>中继地址</strong>。</p><p>  这种方式的带宽由<strong>服务器端承担</strong>，在多人视频聊天的时候，本地带宽压力较小，并且根据 <em><strong>Google</strong></em> 的说明，<em><strong>TURN协议</strong></em> 可以使用在所有的环境中。</p><hr><h5 id="_2-4-2-3-总结" tabindex="-1"><a class="header-anchor" href="#_2-4-2-3-总结" aria-hidden="true">#</a> 2.4.2.3 总结</h5><p>  （单向数据200kbps 一对一通话）</p>',12),An=n("em",null,[n("strong",null,"WebRTC")],-1),jn=n("em",null,[n("strong",null,"STUN")],-1),Mn=n("em",null,[n("strong",null,"TURN")],-1),Bn={href:"https://github.com/coturn/coturn",target:"_blank",rel:"noopener noreferrer"},On=p('<p>  补充：<em><strong>ICE</strong></em> 跟 <em><strong>STUN</strong></em> 和 <em><strong>TURN</strong></em> 不一样，ICE不是一种协议，而是一个框架（Framework），它整合了<em><strong>STUN</strong></em> 和 <em><strong>TURN</strong></em> 。</p><p>  <em><strong>coturn开源项目</strong></em> 集成了 <em><strong>STUN</strong></em> 和 <em><strong>TURN</strong></em>的功能。</p><p>  在WebRTC中用来描述网络信息的术语叫 <em><strong>candidate</strong></em> 。</p><p>  - 媒体协商 <em><strong>sdp</strong></em></p><p>  - 网络协商 <em><strong>candidate</strong></em></p><hr><h4 id="_2-4-2-媒体协商-网络协商数据的交换通道" tabindex="-1"><a class="header-anchor" href="#_2-4-2-媒体协商-网络协商数据的交换通道" aria-hidden="true">#</a> 2.4.2 媒体协商+网络协商数据的交换通道</h4><p>  从上面 [2.4.1 媒体协商（sdp）](#2.4.1 媒体协商（sdp）) 和 [2.4.2 网络协商（candidate）](2.4.2 网络协商（candidate）) ，我们知道了2个客户端，那怎么去交换？是不是需要一个中间商去做交换？</p><p>  所以 我们需要一个 <strong>信令服务器</strong>（ <em><strong>Signal server</strong></em> ）转发彼此的媒体信息和网络信息。</p><figure><img src="'+b+'" alt="SignalServer" tabindex="0" loading="lazy"><figcaption>SignalServer</figcaption></figure><p>  如上图，我们在基于 <em><strong>WebRTC API</strong></em> 开发应用（APP）时，可以将彼此的APP连接到信令服务器（</p><p>  <em><strong>Signal Server</strong></em> ，一般 搭建在公网，或者两端都可以访问到的局域网），借助信令服务器，就可以实现上面提到的 <em><strong>SDP</strong></em> 媒体信息及 <em><strong>Candidate</strong></em> 网络信息交换。</p><p>  我简单理解为如下：</p><p>  你给朋友写信，信写好了需要寄给朋友，把信放到信箱由邮局进行派送，邮递员交到朋友手上，但是每个地方这么大，不可能是一个邮递员送，肯定是由当地的邮局进行分发派送。</p><p>  那么，在这个过程中邮局（邮递员）充当了信令服务器（<em><strong>Signal Server</strong></em>）的作用，你写的信就是<em><strong>sdp</strong></em>，<em><strong>Candidate</strong></em> 就是你填写的朋友地址，这个地址可能因为很大，导致需要根据地址(<em><strong>NAT/Relay</strong></em>)进行邮局分发，例如市邮局 -&gt; 县邮局 -&gt; 乡镇邮局 -&gt;邮递员。</p><p>  NAT: 你主动根据邮局地址去拿。</p><p>  Relay：让邮递员送上门。</p><p> </p><p>  交换SDP的过程:</p><p><img src="'+h+'" alt="交换SDP的过程" loading="lazy">  </p><p>  1. Amy(假设一个人的名字)通过setLocalDescription方法保存自己的SDP信息，然后通过offer方法发送给信令服务器。</p><p>  2. 信息服务器将Amy的SDP转发给另一端的Bob(另一个虚构的名字)，Bob将首先调用setremotedescription来保存Amy的SDP。   3. 然后Bob调用setLocalDescription方法来保存他的SDP，然后使用answer方法通过信令服务器将他的SDP发送给Amy。</p><p>  4. Amy收到Bob的SDP后，调用setRemoteDescription进行保存，双方完成SDP交换，找到交集。如果他们能达成协议，他们就可以建立一个p2p连接并开始通信。</p><hr><h3 id="_2-5-webrtc如何查看apis" tabindex="-1"><a class="header-anchor" href="#_2-5-webrtc如何查看apis" aria-hidden="true">#</a> 2.5 WebRTC如何查看APIs?</h3>',25),Vn={href:"http://webrtc.p2hp.com/getting-started/media-devices.html",target:"_blank",rel:"noopener noreferrer"},Dn=n("p",null,"  如果看英文吃力，可以选择如下地址学习部分示例：",-1),zn={href:"https://www.an.rustfisher.com/webrtc/web-samples/getUserMedia-open-camera/",target:"_blank",rel:"noopener noreferrer"},Fn=p(`<hr><h2 id="_3-安装coturn穿透和转发服务器" tabindex="-1"><a class="header-anchor" href="#_3-安装coturn穿透和转发服务器" aria-hidden="true">#</a> 3. 安装Coturn穿透和转发服务器</h2><h4 id="_3-1-安装依赖" tabindex="-1"><a class="header-anchor" href="#_3-1-安装依赖" aria-hidden="true">#</a> 3.1 安装依赖</h4><h5 id="ubuntu系统" tabindex="-1"><a class="header-anchor" href="#ubuntu系统" aria-hidden="true">#</a> ubuntu系统</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libssl-dev

<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libevent-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="centos系统" tabindex="-1"><a class="header-anchor" href="#centos系统" aria-hidden="true">#</a> centos系统</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> openssl-devel

<span class="token function">sudo</span> yum <span class="token function">install</span> libevent-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="_3-2-下载源码进行编译安装coturn" tabindex="-1"><a class="header-anchor" href="#_3-2-下载源码进行编译安装coturn" aria-hidden="true">#</a> 3.2 下载源码进行编译安装Coturn</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 本次所需完整执行代码</span>
<span class="token function">git</span> clone https://github.com/coturn/coturn
<span class="token builtin class-name">cd</span> coturn
./configure
<span class="token function">make</span>
<span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><blockquote><p>进行 ./configure 的时候报错，如下图：</p></blockquote><figure><img src="`+f+'" alt="configure执行报错1" tabindex="0" loading="lazy"><figcaption>configure执行报错1</figcaption></figure><p> </p><blockquote><p>查阅后表示需要安装 g++</p><p>sudo apt-get install g++</p></blockquote><figure><img src="'+y+'" alt="configure执行报错2" tabindex="0" loading="lazy"><figcaption>configure执行报错2</figcaption></figure><p> </p><blockquote><p>缺少 pkg-config</p><p>sudo apt-get install pkg-config</p></blockquote><p> </p><blockquote><p>再次进行：./configure</p></blockquote><figure><img src="'+w+'" alt="configure正常运行" tabindex="0" loading="lazy"><figcaption>configure正常运行</figcaption></figure><p> </p><blockquote><p>make</p></blockquote><p><img src="'+_+`" alt="make" loading="lazy">  </p><blockquote><p>sudo make install</p></blockquote><hr><h4 id="_3-3-启动并测试" tabindex="-1"><a class="header-anchor" href="#_3-3-启动并测试" aria-hidden="true">#</a> 3.3 启动并测试</h4><h5 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 启动</span>
<span class="token function">sudo</span> <span class="token function">nohup</span> turnserver <span class="token parameter variable">-L</span> <span class="token number">0.0</span>.0.0 <span class="token parameter variable">-a</span> <span class="token parameter variable">-u</span> lqf:123456 <span class="token parameter variable">-v</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-r</span> nort.gov <span class="token operator">&amp;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><h5 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h5>`,32),Hn={href:"https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/",target:"_blank",rel:"noopener noreferrer"},Jn=p('<p> </p><p>  测试stun:</p><figure><img src="'+q+'" alt="测试stun" tabindex="0" loading="lazy"><figcaption>测试stun</figcaption></figure><p>  注意：stun不需要username和password，我这里是多写了。</p><p> </p><p>测试turn:</p><figure><img src="'+x+'" alt="测试turn" tabindex="0" loading="lazy"><figcaption>测试turn</figcaption></figure><p>  注意：测试trun需要username和password,且 <em><strong>IceTransports value</strong></em> 选择为relay。</p><p>  我这里不知道为什么是701，查了一些资料也没有头绪，因为云服务器过期了，就使用的本地虚拟机，所以不知道是不是因为这个，到时候再试试。</p><hr><h2 id="_4-案例实现" tabindex="-1"><a class="header-anchor" href="#_4-案例实现" aria-hidden="true">#</a> 4. 案例实现</h2><h3 id="_4-1-一对一通话" tabindex="-1"><a class="header-anchor" href="#_4-1-一对一通话" aria-hidden="true">#</a> 4.1 一对一通话</h3><h4 id="_4-1-1-一对一通话场景" tabindex="-1"><a class="header-anchor" href="#_4-1-1-一对一通话场景" aria-hidden="true">#</a> 4.1.1 一对一通话场景</h4><figure><img src="'+T+'" alt="一对一通话场景" tabindex="0" loading="lazy"><figcaption>一对一通话场景</figcaption></figure><p>  在一对一通话场景中，每个 <em><strong>Peer</strong></em> 均创建有一个 <em><strong>PeerConnection</strong></em> 对象，由一方主动发 <em><strong>Offer SDP</strong></em>，另一方则应答 <em><strong>AnswerSDP</strong></em>，最后双方交换 <em><strong>ICE Candidate</strong></em> 从而完成通话链路的建立。但是在中国的网络环境中，据一些统计数据显示，至少1半的网络是无法直接穿透打通，这种情况下只能借助 <em><strong>TURN</strong></em> 服务器中转。</p><hr><h3 id="_4-1-2-一对一通话场景代码实现" tabindex="-1"><a class="header-anchor" href="#_4-1-2-一对一通话场景代码实现" aria-hidden="true">#</a> 4.1.2 一对一通话场景代码实现</h3><h5 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型" aria-hidden="true">#</a> 技术选型</h5><p>  <code>前端 -&gt; html、css、js、WebRTC、websocket</code></p><p>  <code>后端 -&gt; springboot + websocket</code></p><h5 id="整体执行流程" tabindex="-1"><a class="header-anchor" href="#整体执行流程" aria-hidden="true">#</a> 整体执行流程</h5><figure><img src="'+S+`" alt="WebRTC整合SpringBoot执行流程" tabindex="0" loading="lazy"><figcaption>WebRTC整合SpringBoot执行流程</figcaption></figure><h5 id="页面代码" tabindex="-1"><a class="header-anchor" href="#页面代码" aria-hidden="true">#</a> 页面代码</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>WebRTC + WebSocket<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width,initial-scale=1.0,user-scalable=no<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">html,
    body</span> <span class="token punctuation">{</span>
        <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#main</span> <span class="token punctuation">{</span>
        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 370px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 550px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#localVideo</span> <span class="token punctuation">{</span>
        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
        <span class="token property">background</span><span class="token punctuation">:</span> #757474<span class="token punctuation">;</span>
        <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
        <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#remoteVideo</span> <span class="token punctuation">{</span>
        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
        <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
        <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">background</span><span class="token punctuation">:</span> #222<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#buttons</span> <span class="token punctuation">{</span>
        <span class="token property">z-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>
        <span class="token property">bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
        <span class="token property">left</span><span class="token punctuation">:</span> 90px<span class="token punctuation">;</span>
        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#toUser</span> <span class="token punctuation">{</span>
        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 7px 0px<span class="token punctuation">;</span>
        <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
        <span class="token property">padding-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#toUser:focus</span> <span class="token punctuation">{</span>
        <span class="token property">border-color</span><span class="token punctuation">:</span> #66afe9<span class="token punctuation">;</span>
        <span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
        <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> inset 0 1px 1px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .075<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 0 8px <span class="token function">rgba</span><span class="token punctuation">(</span>102<span class="token punctuation">,</span> 175<span class="token punctuation">,</span> 233<span class="token punctuation">,</span> .6<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 1px 1px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .075<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 0 8px <span class="token function">rgba</span><span class="token punctuation">(</span>102<span class="token punctuation">,</span> 175<span class="token punctuation">,</span> 233<span class="token punctuation">,</span> .6<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#call</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> #00BB00<span class="token punctuation">;</span>
        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
        <span class="token property">margin-right</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>
        <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
        <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">#hangup</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> #FF5151<span class="token punctuation">;</span>
        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
        <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
        <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>remoteVideo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">playsinline</span> <span class="token attr-name">autoplay</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>localVideo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">playsinline</span> <span class="token attr-name">autoplay</span> <span class="token attr-name">muted</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>buttons<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myName<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toUser<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>输入在线好友账号<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>call<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>视频通话<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hangup<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>挂断<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 可引可不引 --&gt;</span>
<span class="token comment">&lt;!--&lt;script th:src=&quot;@{/js/adapter-2021.js}&quot;&gt;&lt;/script&gt;--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>inline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">

    <span class="token comment">// 生成一个随机的用户名</span>
    <span class="token keyword">let</span> username <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;myName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> username
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> localVideo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;localVideo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> remoteVideo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;remoteVideo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> websocket <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> peer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token function">WebSocketInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">ButtonFunInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/* WebSocket */</span>
    <span class="token keyword">function</span> <span class="token function">WebSocketInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//判断当前浏览器是否支持WebSocket</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;WebSocket&#39;</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 使用192.168.8.57的目的是打包成app的时候可以通过局域网访问</span>
            url <span class="token operator">=</span> <span class="token string">&quot;ws://192.168.8.57:8080/webrtc/&quot;</span> <span class="token operator">+</span> username
            <span class="token comment">// url = &quot;ws://127.0.0.1:8080/webrtc/&quot; + username</span>
            websocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;当前浏览器不支持WebSocket！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//连接发生错误的回调方法</span>
        websocket<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket连接发生错误！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">//连接关闭的回调方法</span>
        websocket<span class="token punctuation">.</span><span class="token function-variable function">onclose</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket连接关闭&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">//连接成功建立的回调方法</span>
        websocket<span class="token punctuation">.</span><span class="token function-variable function">onopen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket连接成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">//接收到消息的回调方法</span>
        websocket<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> fromUser<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> sdp<span class="token punctuation">,</span> iceCandidate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\r</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;\\\\r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;hangup&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;hangup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;call_start&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// msg = 0 表示拒绝，1表示同意</span>
                <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">confirm</span><span class="token punctuation">(</span>fromUser <span class="token operator">+</span> <span class="token string">&quot;发起视频通话，确定接听吗&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> fromUser<span class="token punctuation">;</span>
                    <span class="token function">WebRTCInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    msg <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span>
                <span class="token punctuation">}</span>

                websocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;call_back&quot;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">toUser</span><span class="token operator">:</span> fromUser<span class="token punctuation">,</span>
                    <span class="token literal-property property">fromUser</span><span class="token operator">:</span> username<span class="token punctuation">,</span>
                    <span class="token literal-property property">msg</span><span class="token operator">:</span> msg
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;call_back&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">===</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">&quot;同意视频通话&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//创建本地视频并发送offer</span>
                    <span class="token keyword">let</span> stream <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">getUserMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">video</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">audio</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    localVideo<span class="token punctuation">.</span>srcObject <span class="token operator">=</span> stream<span class="token punctuation">;</span>
                    stream<span class="token punctuation">.</span><span class="token function">getTracks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">track</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        peer<span class="token punctuation">.</span><span class="token function">addTrack</span><span class="token punctuation">(</span>track<span class="token punctuation">,</span> stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">let</span> offer <span class="token operator">=</span> <span class="token keyword">await</span> peer<span class="token punctuation">.</span><span class="token function">createOffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">await</span> peer<span class="token punctuation">.</span><span class="token function">setLocalDescription</span><span class="token punctuation">(</span>offer<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">let</span> newOffer <span class="token operator">=</span> offer<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    newOffer<span class="token punctuation">[</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> username<span class="token punctuation">;</span>
                    newOffer<span class="token punctuation">[</span><span class="token string">&quot;toUser&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                    websocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newOffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>msg <span class="token operator">===</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">&quot;拒绝视频通话&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;hangup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;hangup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;offer&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> stream <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>mediaDevices<span class="token punctuation">.</span><span class="token function">getUserMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">video</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">audio</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                localVideo<span class="token punctuation">.</span>srcObject <span class="token operator">=</span> stream<span class="token punctuation">;</span>
                stream<span class="token punctuation">.</span><span class="token function">getTracks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">track</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    peer<span class="token punctuation">.</span><span class="token function">addTrack</span><span class="token punctuation">(</span>track<span class="token punctuation">,</span> stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">await</span> peer<span class="token punctuation">.</span><span class="token function">setRemoteDescription</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RTCSessionDescription</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">,</span> sdp <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token keyword">await</span> peer<span class="token punctuation">.</span><span class="token function">createAnswer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> newAnswer <span class="token operator">=</span> answer<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                newAnswer<span class="token punctuation">[</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> username<span class="token punctuation">;</span>
                newAnswer<span class="token punctuation">[</span><span class="token string">&quot;toUser&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                websocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newAnswer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">await</span> peer<span class="token punctuation">.</span><span class="token function">setLocalDescription</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;answer&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                peer<span class="token punctuation">.</span><span class="token function">setRemoteDescription</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RTCSessionDescription</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">,</span> sdp <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;_ice&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                peer<span class="token punctuation">.</span><span class="token function">addIceCandidate</span><span class="token punctuation">(</span>iceCandidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* WebRTC */</span>
    <span class="token keyword">function</span> <span class="token function">WebRTCInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// RTCPeerConnection 的配置，内网时不需要开启stun、turn</span>
        <span class="token keyword">const</span> defaultConfiguration <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">bundlePolicy</span><span class="token operator">:</span> <span class="token string">&quot;max-bundle&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">rtcpMuxPolicy</span><span class="token operator">:</span> <span class="token string">&quot;require&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">iceTransportPolicy</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span> <span class="token comment">// relay：如果使用了turn建议使用relay</span>
            <span class="token comment">// ice</span>
            <span class="token literal-property property">iceServers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;urls&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                        <span class="token string">&quot;turn:192.168.147.122:3478?transport=udp&quot;</span><span class="token punctuation">,</span>
                        <span class="token string">&quot;turn:192.168.147.122:3478?transport=tcp&quot;</span>
                    <span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&#39;lqf&#39;</span><span class="token punctuation">,</span>
                    <span class="token string-property property">&quot;credential&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;urls&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                        <span class="token string">&quot;stun:192.168.147.122:3478&quot;</span>
                    <span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> Rtc <span class="token operator">=</span> window<span class="token punctuation">.</span>RTCPeerConnection <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitRTCPeerConnection <span class="token operator">||</span> window<span class="token punctuation">.</span>mozRTCPeerConnection<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Rtc<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;不支持WebRTC&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// peer = new RTCPeerConnection(defaultConfiguration);</span>
        peer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RTCPeerConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//ice</span>
        peer<span class="token punctuation">.</span><span class="token function-variable function">onicecandidate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>candidate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                websocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;_ice&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">toUser</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
                    <span class="token literal-property property">fromUser</span><span class="token operator">:</span> username<span class="token punctuation">,</span>
                    <span class="token literal-property property">iceCandidate</span><span class="token operator">:</span> e<span class="token punctuation">.</span>candidate
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">//track</span>
        peer<span class="token punctuation">.</span><span class="token function-variable function">ontrack</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>streams<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                remoteVideo<span class="token punctuation">.</span>srcObject <span class="token operator">=</span> e<span class="token punctuation">.</span>streams<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* 按钮事件 */</span>
    <span class="token keyword">function</span> <span class="token function">ButtonFunInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//视频通话</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;call&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">;</span>

            <span class="token keyword">let</span> toUser <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>toUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;请先指定好友账号，再发起视频通话！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>peer <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">WebRTCInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            websocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;call_start&quot;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">fromUser</span><span class="token operator">:</span> username<span class="token punctuation">,</span>
                <span class="token literal-property property">toUser</span><span class="token operator">:</span> toUser<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//挂断</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;hangup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">&#39;unset&#39;</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>localVideo<span class="token punctuation">.</span>srcObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> videoTracks <span class="token operator">=</span> localVideo<span class="token punctuation">.</span>srcObject<span class="token punctuation">.</span><span class="token function">getVideoTracks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                videoTracks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">videoTrack</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    videoTrack<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    localVideo<span class="token punctuation">.</span>srcObject<span class="token punctuation">.</span><span class="token function">removeTrack</span><span class="token punctuation">(</span>videoTrack<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>remoteVideo<span class="token punctuation">.</span>srcObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> videoTracks <span class="token operator">=</span> remoteVideo<span class="token punctuation">.</span>srcObject<span class="token punctuation">.</span><span class="token function">getVideoTracks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                videoTracks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">videoTrack</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    videoTrack<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    remoteVideo<span class="token punctuation">.</span>srcObject<span class="token punctuation">.</span><span class="token function">removeTrack</span><span class="token punctuation">(</span>videoTrack<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//挂断同时，通知对方</span>
                websocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;hangup&quot;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">fromUser</span><span class="token operator">:</span> username<span class="token punctuation">,</span>
                    <span class="token literal-property property">toUser</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;toUser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>peer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                peer<span class="token punctuation">.</span>ontrack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                peer<span class="token punctuation">.</span>onremovetrack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                peer<span class="token punctuation">.</span>onremovestream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                peer<span class="token punctuation">.</span>onicecandidate <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                peer<span class="token punctuation">.</span>oniceconnectionstatechange <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                peer<span class="token punctuation">.</span>onsignalingstatechange <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                peer<span class="token punctuation">.</span>onicegatheringstatechange <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                peer<span class="token punctuation">.</span>onnegotiationneeded <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

                peer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                peer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            localVideo<span class="token punctuation">.</span>srcObject <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            remoteVideo<span class="token punctuation">.</span>srcObject <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="后端代码" tabindex="-1"><a class="header-anchor" href="#后端代码" aria-hidden="true">#</a> 后端代码</h5><blockquote><p>pom</p></blockquote><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.blacktea<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>wbrtc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>webrtc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>springboot整合webrtc的demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- 引入WebSocket --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-websocket<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.6.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><blockquote><p>配置类</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>blacktea<span class="token punctuation">.</span>webrtc<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">DeserializationFeature</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ComponentScan</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>socket<span class="token punctuation">.</span>server<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">ServerEndpointExporter</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>:
 * <span class="token keyword">@author</span>: black tea
 * <span class="token keyword">@date</span>: 2023/3/15 19:37
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token comment">// 扫描cn.hutool.extra.spring包下所有类并注册之</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;cn.hutool.extra.spring&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyWebSocketConfig</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServerEndpointExporter</span> <span class="token function">serverEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ObjectMapper</span> <span class="token function">mapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mapper<span class="token punctuation">.</span><span class="token function">setDateFormat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mapper<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">DeserializationFeature</span><span class="token punctuation">.</span><span class="token constant">FAIL_ON_UNKNOWN_PROPERTIES</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> mapper<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><blockquote><p>WebSocket服务类</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>blacktea<span class="token punctuation">.</span>webrtc<span class="token punctuation">.</span>server</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>extra<span class="token punctuation">.</span>spring<span class="token punctuation">.</span></span><span class="token class-name">SpringUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">ObjectMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Import</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">PathParam</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ServerEndpoint</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentHashMap</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: WebRtc的 WebSocket 服务
 * <span class="token keyword">@author</span>: black tea
 * <span class="token keyword">@date</span>: 2023/3/15 18:30
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@ServerEndpoint</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/webrtc/{username}&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>extra<span class="token punctuation">.</span>spring<span class="token punctuation">.</span></span>SpringUtil</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebRtcWebSocketServer</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 连接集合
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Session</span><span class="token punctuation">&gt;</span></span> sessionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 连接建立成功时的调用方法
     * <span class="token keyword">@param</span> <span class="token parameter">session</span> 会话对象
     * <span class="token keyword">@param</span> <span class="token parameter">username</span> 用户
     */</span>
    <span class="token annotation punctuation">@OnOpen</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;ws client 连接成功,username={}, session={}&quot;</span><span class="token punctuation">,</span> username<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sessionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@OnClose</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Session</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entries <span class="token operator">=</span> sessionMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Session</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> entries<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">String</span> username <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;ws client 关闭成功,username={}, session={}&quot;</span><span class="token punctuation">,</span> username<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
                sessionMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@OnError</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> error<span class="token punctuation">)</span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;ws 出现异常,&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 服务器接收到客户端消息时调用的方法
     */</span>
    <span class="token annotation punctuation">@OnMessage</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;receive message:{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token class-name">SpringUtil</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//JSON字符串转 HashMap</span>
            <span class="token class-name">HashMap</span> hashMap <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token class-name">HashMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//消息类型</span>
            <span class="token class-name">String</span> type <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> hashMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//to user</span>
            <span class="token class-name">String</span> toUser <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> hashMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;toUser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Session</span> toUserSession <span class="token operator">=</span> sessionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> fromUser <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> hashMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//msg</span>
            <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> hashMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//sdp</span>
            <span class="token class-name">String</span> sdp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> hashMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;sdp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//ice</span>
            <span class="token class-name">Map</span> iceCandidate  <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">)</span> hashMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;iceCandidate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//呼叫的用户不在线</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>toUserSession <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                toUserSession <span class="token operator">=</span> session<span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;call_back&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;系统消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Sorry，呼叫的用户不在线！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token function">send</span><span class="token punctuation">(</span>toUserSession<span class="token punctuation">,</span>mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//对方挂断</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;hangup&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">,</span>fromUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;对方挂断！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//视频通话请求</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;call_start&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">,</span>fromUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//视频通话请求回应</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;call_back&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">,</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//offer</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;offer&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">,</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sdp&quot;</span><span class="token punctuation">,</span>sdp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//answer</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">,</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sdp&quot;</span><span class="token punctuation">,</span>sdp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//ice</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;_ice&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fromUser&quot;</span><span class="token punctuation">,</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;iceCandidate&quot;</span><span class="token punctuation">,</span>iceCandidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token function">send</span><span class="token punctuation">(</span>toUserSession<span class="token punctuation">,</span>mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;onMessage,异常:&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 封装一个send方法，发送消息到前端
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;send message:{}&quot;</span><span class="token punctuation">,</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            session<span class="token punctuation">.</span><span class="token function">getBasicRemote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendText</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;message,待发送的数据:{},异常:&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>  注意：因为我现在没有公网服务器，所以现在我的所有测试都只进行了内网测试。</p><hr><h3 id="_4-1-3-效果图" tabindex="-1"><a class="header-anchor" href="#_4-1-3-效果图" aria-hidden="true">#</a> 4.1.3 效果图</h3><h5 id="_4-13-1-浏览器效果图" tabindex="-1"><a class="header-anchor" href="#_4-13-1-浏览器效果图" aria-hidden="true">#</a> 4.13.1 浏览器效果图</h5><figure><img src="`+C+'" alt="浏览器视频效果图" tabindex="0" loading="lazy"><figcaption>浏览器视频效果图</figcaption></figure><hr><p> </p><h5 id="_4-13-2-安卓效果图" tabindex="-1"><a class="header-anchor" href="#_4-13-2-安卓效果图" aria-hidden="true">#</a> 4.13.2 安卓效果图</h5><blockquote><p>电脑浏览器效果图</p></blockquote><figure><img src="'+U+'" alt="电脑浏览器效果图" tabindex="0" loading="lazy"><figcaption>电脑浏览器效果图</figcaption></figure><hr><p> </p><blockquote><p>手机浏览器效果图</p></blockquote><figure><img src="'+P+'" alt="手机效果图" tabindex="0" loading="lazy"><figcaption>手机效果图</figcaption></figure><p>  app的话可以使用 <em><strong>Hbuilder X</strong></em> 进行打包。</p><p>  注意：打包的时候记得修改自己的websocket服务的ip和端口。</p><hr><h2 id="_5-公网部署" tabindex="-1"><a class="header-anchor" href="#_5-公网部署" aria-hidden="true">#</a> 5. 公网部署</h2><p>因为现在没有公网服务器，所以暂时不弄。</p>',53);function Ln(Gn,Xn){const a=i("ExternalLinkIcon");return o(),c("div",null,[R,n("p",null,[s("  "),n("a",N,[s("WebRTC中文网"),t(a)])]),n("p",null,[s("  "),n("a",W,[s("WebRTC中文社区"),t(a)])]),n("p",null,[s("  "),n("a",E,[s("WebRTC英文官网"),t(a)])]),n("p",null,[s("  "),n("a",A,[s("WebRTC安全相关"),t(a)])]),n("p",null,[s("  "),n("a",j,[s("coturn开源地址"),t(a)])]),n("p",null,[s("  "),n("a",M,[s("truns、tun测试网站"),t(a)]),B]),O,V,n("p",null,[s("  "),n("a",D,[s("P2P知识"),t(a)]),z]),n("p",null,[s("  "),n("a",F,[s("P2P技术详解(一)：NAT详解——详细原理、P2P简介"),t(a)])]),n("p",null,[s("  "),n("a",H,[s("P2P技术详解(二)：P2P中的NAT穿越(打洞)方案详解"),t(a)])]),n("p",null,[s("  "),n("a",J,[s("P2P技术详解(三)：P2P技术之STUN、TURN、ICE详解"),t(a)])]),n("p",null,[s("  "),n("a",L,[s("详解P2P技术中的NAT穿透原理"),t(a)])]),G,X,n("p",null,[s("  "),n("a",Y,[s("https://www.bbsmax.com/A/B0zqLrWNdv/"),t(a)])]),n("p",null,[s(" "),n("a",K,[s("https://www.an.rustfisher.com/webrtc/web-samples/getUserMedia-open-camera/"),t(a)])]),n("p",null,[s("  "),n("a",Q,[s("https://github.com/shushushv/webrtc-p2p"),t(a)])]),n("p",null,[s(" "),n("a",Z,[$,s("原理简述"),t(a)])]),n("p",null,[s(" "),n("a",nn,[sn,s("介绍及简单使用"),t(a)])]),an,tn,pn,en,on,n("p",null,[s(" b站学习地址："),n("a",cn,[s("https://www.bilibili.com/video/BV1D14y1W7qp?p=1&vd_source=d6cd8b3f892acbf22f02da2bfa7d95fe"),t(a)])]),ln,un,rn,kn,n("p",null,[s("  WebRTC (Web Real-Time Communications) 是一项"),n("a",dn,[s("实时通讯"),t(a)]),s("技术，它允许网络应用或者站点，在不借助中间媒介的情况下，建立浏览器之间"),n("a",mn,[s("点对点"),t(a)]),s("（Peer-to-Peer）的连接，实现"),n("a",vn,[s("视频流"),t(a)]),s("和（或）"),n("a",gn,[s("音频流"),t(a)]),s("或者其他任意数据的传输。WebRTC 包含的这些标准使用户在无需安装任何插件或者第三方的软件的情况下，创建点对点（Peer-to-Peer）的数据分享和"),n("a",bn,[s("电话会议"),t(a)]),s("成为可能。")]),hn,fn,yn,wn,_n,n("p",null,[s("  这句话是WebRTC中文网内的，里面还有很多小例子，"),n("a",qn,[s("示例"),t(a)]),s("。")]),xn,Tn,Sn,l(` 
![WebRTC架构图](https://img-blog.csdnimg.cn/922eff6cee7d4b709bcf40288ca6a7b8.png#pic_center) `),Cn,n("p",null,[s("  "),Un,s("（Session Traversal Utilities for NAT，NAT会话穿越应用程序）是一种网络协议，它允许位于NAT（或多重 NAT）后的客户端找出自己的公网地址，查出自己位于哪种类型的NAT之后以及NAT为某一个本地端口所绑定的 Internet端端口。这些信息被用来在两个同时处于NAT路由器之后的主机之间创建UDP通信。该协议由 "),n("em",null,[n("strong",null,[n("a",Pn,[s("RFC 5389"),t(a)])])]),s(" 定 义。")]),In,Rn,Nn,n("p",null,[s("  搭建STUN服务器很简单，媒体流传输是按照 "),n("em",null,[n("strong",null,[n("a",Wn,[s("P2P"),t(a)])])]),s(" 的方式。")]),En,n("p",null,[s("  以上是 "),An,s(" 中经常用到的2个协议，"),jn,s(" 和 "),Mn,s(" 服务器我们使用 "),n("em",null,[n("strong",null,[n("a",Bn,[s("coturn"),t(a)]),s("开源项目")])]),s(" 来搭建。")]),On,n("p",null,[s("  英文网址：["),n("a",Vn,[s("媒体设备入门 | WebRTC中文网 (p2hp.com)"),t(a)]),s("]")]),Dn,n("p",null,[s("  "),n("a",zn,[s("WebRTC打开本地摄像头 - RustFisher 安卓|Java|设计模式|WebRTC|Python|NestJS|PyQt"),t(a)])]),Fn,n("p",null,[s("  测试网站："),n("a",Hn,[s("Trickle ICE (webrtc.github.io)"),t(a)])]),Jn])}const Kn=e(I,[["render",Ln],["__file","webrtc.html.vue"]]);export{Kn as default};
