import{_ as e,V as o,W as c,X as n,Y as s,$ as t,Z as l,a0 as p,C as i}from"./framework-a71e09ed.js";const u="/assets/img/minio/minio管理后台登录页面.png",k="/assets/img/minio/minio管理后台首页.png",r="/assets/img/minio/单元测试minio上传文件.png",d="/assets/img/minio/解析minio上传返回的json.png",m="/assets/img/minio/短链接效果访问.png",v={},b=p('<h1 id="springboot整合minio" tabindex="-1"><a class="header-anchor" href="#springboot整合minio" aria-hidden="true">#</a> SpringBoot整合Minio</h1><h2 id="搭建属于自己的对象储存服务及短链服务-minio" tabindex="-1"><a class="header-anchor" href="#搭建属于自己的对象储存服务及短链服务-minio" aria-hidden="true">#</a> 搭建属于自己的对象储存服务及短链服务（Minio）</h2><h4 id="文档地址" tabindex="-1"><a class="header-anchor" href="#文档地址" aria-hidden="true">#</a> 文档地址</h4>',3),g={href:"https://docs.min.io/?ref=ob",target:"_blank",rel:"noopener noreferrer"},f={href:"http://docs.minio.org.cn/docs/master/java-client-api-reference",target:"_blank",rel:"noopener noreferrer"},h=p(`<h4 id="备注" tabindex="-1"><a class="header-anchor" href="#备注" aria-hidden="true">#</a> 备注</h4><p>不同版本的minio所实现的api和类是不同的,需要根据自己的需求版本进行实现,文档中的内容仅供参考，尤其是中文文档,版本过老,实际api调用方式已完全不同,建议以官方文档与实际版本源代码作为实现功能,本文使用 <strong>版本 8.2.2</strong></p><h2 id="本文版本" tabindex="-1"><a class="header-anchor" href="#本文版本" aria-hidden="true">#</a> 本文版本</h2><table><thead><tr><th style="text-align:left;">versionv</th><th style="text-align:center;">内容</th></tr></thead><tbody><tr><td style="text-align:left;">1.0.0</td><td style="text-align:center;">初步实现,minio基础存储(获取)对象,通过redis缓存实现短链服务。</td></tr><tr><td style="text-align:left;"></td><td style="text-align:center;"></td></tr></tbody></table><h2 id="实现逻辑" tabindex="-1"><a class="header-anchor" href="#实现逻辑" aria-hidden="true">#</a> 实现逻辑</h2><h4 id="实现minio储存" tabindex="-1"><a class="header-anchor" href="#实现minio储存" aria-hidden="true">#</a> 实现minio储存</h4><p>业务版本: version_1.0.0</p><p>业务说明: 仅需实现 minio基础的储存功能与简单的短链服务</p><p>minio储存没什么好说的,参照文档与当前版本源码即可实现,</p><p>主要在短链的服务怎么实现稍微要讲一下,</p><ol><li><p>如何实现有效短链码?</p><p>我这里直接设置了两个策略接口,一个用来校验短链码是否合理,一个用来生成短链码。</p></li><li><p>如何储存短链码与实际储存对象的关系？</p><p>可以设置一个关系储存接口,使用例如mongo、redis等的实现,我下面的实现是没有写这个接口,直接使用redis作为储存关系的实现。</p><p>​</p></li></ol><h6 id="返回vo" tabindex="-1"><a class="header-anchor" href="#返回vo" aria-hidden="true">#</a> 返回VO</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* <span class="token keyword">@auth</span>: black tea
* <span class="token keyword">@date</span>: 2021/6/18 8:45
* <span class="token keyword">@description</span>: 
*		1.0.0 版本仅涉及到地址一部分属性;
*		以下大部分属性属于1.1.0的内容（例如锁定控制,无效控制,场景唯一id等）
*       1.1.0 可以精确控制是否可以访问该资源,可以设置该对象资源的私有功能,满足部分敏感文件不可以被公共访* 问的业务等,还可以将用户已经放弃的对象资源进行释放,减少服务资源空间的浪费!
*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UploadBaseVo</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">2763738636057411330L</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 文件原名称 -前端用于文件名称替换 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> fileName<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 长链原地址 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 短链地址 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> shortUrl<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 是否锁定,锁定后无法进行访问 **/</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isLock<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 是否无效 **/</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isInvalid<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 无效枚举 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">UploadFileConstant<span class="token punctuation">.</span>UploadFileInvalidEnum</span> invalidEnum<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 锁定或无效原因 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> lockOrInvalidCause<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 最后有效时间 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> lastEffectiveTime<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 上传的客户端类型 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">UploadFileConstant</span><span class="token punctuation">.</span>uploadClientType clientType<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 场景id - 唯一 - 非必有 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> sceneId<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** 销毁枚举 **/</span>
    <span class="token keyword">private</span> <span class="token class-name">UploadFileConstant<span class="token punctuation">.</span>DestroyEnum</span> destroyEnum<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * return true 表示超时
     * <span class="token keyword">@param</span> <span class="token parameter">date</span> 比较的时间
     * <span class="token keyword">@return</span> boolean
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isTimOut</span><span class="token punctuation">(</span><span class="token class-name">Date</span> date<span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">return</span> date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> lastEffectiveTime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="上传对象文件" tabindex="-1"><a class="header-anchor" href="#上传对象文件" aria-hidden="true">#</a> 上传对象文件</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">MinioUploadVo</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> file<span class="token punctuation">,</span> <span class="token class-name">UploadBaseDto</span> dto<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InvalidKeyException</span><span class="token punctuation">,</span> <span class="token class-name">InvalidResponseException</span><span class="token punctuation">,</span> <span class="token class-name">InsufficientDataException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation">,</span> <span class="token class-name">ServerException</span><span class="token punctuation">,</span> <span class="token class-name">InternalException</span><span class="token punctuation">,</span> <span class="token class-name">XmlParserException</span><span class="token punctuation">,</span> <span class="token class-name">ErrorResponseException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dto <span class="token keyword">instanceof</span> <span class="token class-name">MinioUploadDto</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">MinioUploadDto</span> uploadDto <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MinioUploadDto</span><span class="token punctuation">)</span> dto<span class="token punctuation">;</span>
            <span class="token class-name">String</span> bucketName <span class="token operator">=</span> uploadDto<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Validator</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                bucketName <span class="token operator">=</span> <span class="token class-name">MinioConstant</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_STORAGE_BUCKET</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">boolean</span> isExist <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">bucketExists</span><span class="token punctuation">(</span><span class="token class-name">BucketExistsArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isExist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;存储桶已经存在！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//创建存储桶并设置只读权限</span>
                minioClient<span class="token punctuation">.</span><span class="token function">makeBucket</span><span class="token punctuation">(</span><span class="token class-name">MakeBucketArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">SetBucketPolicyArgs</span> setBucketPolicyArgs <span class="token operator">=</span> <span class="token class-name">SetBucketPolicyArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token class-name">MinioConstant<span class="token punctuation">.</span>PolicyType</span><span class="token punctuation">.</span><span class="token constant">READ_ONLY</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                minioClient<span class="token punctuation">.</span><span class="token function">setBucketPolicy</span><span class="token punctuation">(</span>setBucketPolicyArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span> filename <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 设置存储对象名称</span>
            <span class="token class-name">String</span> objectName <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;yyyyMMdd&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> filename<span class="token punctuation">;</span>
            <span class="token comment">// 使用putObject上传一个文件到存储桶中</span>
            <span class="token class-name">String</span> fileContent <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                fileContent <span class="token operator">=</span> fileContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">PutObjectArgs</span> putObjectArgs <span class="token operator">=</span> <span class="token class-name">PutObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">contentType</span><span class="token punctuation">(</span>fileContent<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">PutObjectArgs</span><span class="token punctuation">.</span><span class="token constant">MIN_MULTIPART_SIZE</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ObjectWriteResponse</span> objectWriteResponse <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>putObjectArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;文件上传成功,对象:{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">toJsonStr</span><span class="token punctuation">(</span>objectWriteResponse<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MinioGetObjectDto</span> getObjectDto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MinioGetObjectDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            getObjectDto<span class="token punctuation">.</span><span class="token function">setBucketName</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            getObjectDto<span class="token punctuation">.</span><span class="token function">setFileName</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
            getObjectDto<span class="token punctuation">.</span><span class="token function">setObjectName</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MinioUploadVo</span> vo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span>getObjectDto<span class="token punctuation">)</span><span class="token punctuation">;</span>
            vo<span class="token punctuation">.</span><span class="token function">setSceneId</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getSceneId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> url <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getShortUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">URLUtil</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> path1 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 这里默认使用的是redis的储存短链策略</span>
            redisUtils<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">UploadFileConstant</span><span class="token punctuation">.</span>filePrefix <span class="token operator">+</span> path1<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;::&quot;</span> <span class="token operator">+</span> path1<span class="token punctuation">,</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> vo<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;上传失败,因为当前调用的服务(minioService),入参类型dto错误!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="获取对象文件地址" tabindex="-1"><a class="header-anchor" href="#获取对象文件地址" aria-hidden="true">#</a> 获取对象文件地址</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token class-name">MinioUploadVo</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token class-name">UploadBaseDto</span> dto<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InvalidResponseException</span><span class="token punctuation">,</span> <span class="token class-name">InsufficientDataException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation">,</span> <span class="token class-name">ServerException</span><span class="token punctuation">,</span> <span class="token class-name">InternalException</span><span class="token punctuation">,</span> <span class="token class-name">XmlParserException</span><span class="token punctuation">,</span> <span class="token class-name">ErrorResponseException</span><span class="token punctuation">,</span> <span class="token class-name">InternalException</span><span class="token punctuation">,</span> <span class="token class-name">InvalidKeyException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dto <span class="token keyword">instanceof</span> <span class="token class-name">MinioGetObjectDto</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">MinioGetObjectDto</span> getObjectDto <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MinioGetObjectDto</span><span class="token punctuation">)</span> dto<span class="token punctuation">;</span>
            <span class="token class-name">String</span> bucketName <span class="token operator">=</span> getObjectDto<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> objectName <span class="token operator">=</span> getObjectDto<span class="token punctuation">.</span><span class="token function">getObjectName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Validator</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                bucketName <span class="token operator">=</span> <span class="token class-name">MinioConstant</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_STORAGE_BUCKET</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">GetPresignedObjectUrlArgs</span> getPresignedObjectUrlArgs <span class="token operator">=</span> <span class="token class-name">GetPresignedObjectUrlArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> url <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">getPresignedObjectUrl</span><span class="token punctuation">(</span>getPresignedObjectUrlArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            getObjectDto<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">build</span><span class="token punctuation">(</span>getObjectDto<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">MD5Strategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
       <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="短链服务实现" tabindex="-1"><a class="header-anchor" href="#短链服务实现" aria-hidden="true">#</a> 短链服务实现</h6><p>先增加两个策略接口！</p><p>1: 校验短链码是否重复接口?</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CheckShortUrlStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 短链接地址是否重复, 重复 true
     * <span class="token keyword">@param</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">boolean</span> <span class="token function">isRepeat</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2: 自定义生成短链码的接口?</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UrlToShortUrlStrategy</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 长链接转短连接
     * <span class="token keyword">@param</span> <span class="token parameter">url</span> 长链接
     * <span class="token keyword">@return</span> String
     */</span>
    <span class="token class-name">String</span> <span class="token function">toShortUrl</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token keyword">int</span> resultLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终调用接口实现短链服务 ↓↓↓↓</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
 *  生成返回客户端的vo
 */</span>
<span class="token keyword">private</span> <span class="token class-name">MinioUploadVo</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">MinioGetObjectDto</span> dto<span class="token punctuation">,</span> <span class="token class-name">UrlToShortUrlStrategy</span> strategy<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">,</span> <span class="token class-name">CheckShortUrlStrategy</span> checkShortUrlStrategy<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">MinioUploadVo</span> vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MinioUploadVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setSceneId</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getSceneId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setBucketName</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setObjectName</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getObjectName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setFileName</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> url <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> strategy<span class="token punctuation">)</span><span class="token punctuation">{</span>
            strategy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defaultBuildShortUrlStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> shortUrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlTpShortUrlContext</span><span class="token punctuation">(</span>strategy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">shortUrlCheck</span><span class="token punctuation">(</span>checkShortUrlStrategy<span class="token punctuation">,</span>shortUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            shortUrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlTpShortUrlContext</span><span class="token punctuation">(</span>strategy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        vo<span class="token punctuation">.</span><span class="token function">setShortUrl</span><span class="token punctuation">(</span>shortUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setClientType</span><span class="token punctuation">(</span><span class="token class-name">UploadFileConstant</span><span class="token punctuation">.</span>uploadClientType<span class="token punctuation">.</span><span class="token constant">MINIO_CLIENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> vo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	<span class="token comment">// 判断是否满足短链的策略</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">shortUrlCheck</span><span class="token punctuation">(</span><span class="token class-name">CheckShortUrlStrategy</span> strategy<span class="token punctuation">,</span><span class="token class-name">String</span> shortUrl<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> strategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 短链策略默认实现校验短链码是否重复！</span>
            strategy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">defaultCheckStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> strategy<span class="token punctuation">.</span><span class="token function">isRepeat</span><span class="token punctuation">(</span>shortUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	
    <span class="token keyword">private</span> <span class="token class-name">CheckShortUrlStrategy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">defaultCheckStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> url <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">URLUtil</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 取url首位作为 :: 第二重</span>
            <span class="token class-name">String</span> path1 <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">UploadBaseVo</span> uploadBaseVo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UploadBaseVo</span><span class="token punctuation">)</span> redisUtils<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">UploadFileConstant</span><span class="token punctuation">.</span>filePrefix <span class="token operator">+</span> path1<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;::&quot;</span> <span class="token operator">+</span> path1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 是否存在?</span>
            <span class="token keyword">return</span> <span class="token class-name">Validator</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>uploadBaseVo<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Validator</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>uploadBaseVo<span class="token punctuation">.</span><span class="token function">getShortUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">UrlToShortUrlStrategy</span> <span class="token function">defaultBuildShortUrlStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 默认采用随机值策略</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RandomStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="效果图" tabindex="-1"><a class="header-anchor" href="#效果图" aria-hidden="true">#</a> 效果图</h2><ul><li>Minio 服务</li></ul>`,27),y=n("figure",null,[n("img",{src:u,alt:"minio管理后台登录页面",tabindex:"0",loading:"lazy"}),n("figcaption",null,"minio管理后台登录页面")],-1),w=n("figure",null,[n("img",{src:k,alt:"minio管理后台首页",tabindex:"0",loading:"lazy"}),n("figcaption",null,"minio管理后台首页")],-1),S=n("p",null,"其他的功能不做介绍，自己看下文档即可。",-1),U=n("ul",null,[n("li",null,[s("单元测试 ​ "),n("img",{src:r,alt:"单元测试minio上传文件",loading:"lazy"})])],-1),j=n("figure",null,[n("img",{src:d,alt:"解析minio上传返回的json",tabindex:"0",loading:"lazy"}),n("figcaption",null,"解析minio上传返回的json")],-1),x={href:"http://localhost/iymQvia",target:"_blank",rel:"noopener noreferrer"},_=n("figure",null,[n("img",{src:m,alt:"短链接效果访问",tabindex:"0",loading:"lazy"}),n("figcaption",null,"短链接效果访问")],-1);function O(E,N){const a=i("ExternalLinkIcon");return o(),c("div",null,[b,n("p",null,[s("minio官方文档: "),n("a",g,[s("https://docs.min.io/?ref=ob"),t(a)])]),n("p",null,[s("minio 中文文档地址: "),n("a",f,[s("http://docs.minio.org.cn/docs/master/java-client-api-reference"),t(a)])]),h,l(" ![组合模式逻辑图](/assets/img/设计模式/创作型模式/组合模式逻辑图.png) "),y,w,S,U,j,n("p",null,[s("实际短链效果 -> 访问: "),n("a",x,[s("http://localhost/iymQvia"),t(a)])]),_])}const D=e(v,[["render",O],["__file","SpringBoot整合Minio.html.vue"]]);export{D as default};
